/*
Copyright (C) 2023  Arden Butterfield

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
*/

#pragma once
#include <array>
#include <vector>

#include "utils.h"

class AbsoluteThreshold {
public:
    AbsoluteThreshold();
    ~AbsoluteThreshold();
    void fill_threshold(std::vector<floattype>& thresh, floattype sample_rate);
    floattype get_threshold(floattype frequency);
private:
    floattype interpolate(floattype x1, floattype y1, floattype x2, floattype y2, floattype x_mid);
    // {Frequency, power}
    // Note that this is not amplitude, and is also not dB. We apply the thresholds in the
    // power domain, so this eliminates conversion math.
    std::array<std::array<floattype, 2>, 106> thresh_table = {{
        {86.13, 386.36697705406937},
        {172.27, 30.549211132155122},
        {258.4, 11.803206356517299},
        {344.53, 7.079457843841379},
        {430.66, 5.1286138399136485},
        {516.8, 4.083193863326921},
        {602.93, 3.443499307633385},
        {689.06, 3.013006024186121},
        {775.2, 2.703958364108844},
        {861.33, 2.4660393372343394},
        {947.46, 2.2750974307720706},
        {1033.59, 2.113489039836647},
        {1119.73, 1.9724227361148539},
        {1205.86, 1.8492686189780783},
        {1291.99, 1.733803997754138},
        {1378.13, 1.625548755750484},
        {1464.26, 1.5240527537972912},
        {1550.39, 1.4223287871228198},
        {1636.52, 1.3273944577297394},
        {1722.66, 1.2302687708123816},
        {1808.79, 1.1376272858234309},
        {1894.92, 1.0495424286523223},
        {1981.05, 0.9616122783836647},
        {2067.19, 0.8790225168308843},
        {2153.32, 0.8016780633876791},
        {2239.45, 0.7277798045368241},
        {2325.59, 0.662216503701762},
        {2411.72, 0.6011737374832781},
        {2497.85, 0.5457578610912709},
        {2583.98, 0.497737084978936},
        {2670.12, 0.45603691595129614},
        {2756.25, 0.41975898399100753},
        {2842.38, 0.38994198667654345},
        {2928.52, 0.3655947916131249},
        {3014.65, 0.34673685045253166},
        {3100.78, 0.3326595532940045},
        {3186.91, 0.32284941217126356},
        {3273.05, 0.3184197521726125},
        {3359.18, 0.317687407064977},
        {3445.31, 0.32210687912834346},
        {3531.45, 0.3303695410368148},
        {3617.58, 0.34276778654645035},
        {3703.71, 0.36057864302164244},
        {3789.84, 0.3828247433168227},
        {3875.98, 0.4102041029866068},
        {3962.11, 0.44258837236262655},
        {4048.24, 0.4797334486366891},
        {4134.38, 0.5223961889991198},
        {4306.64, 0.6223002851691595},
        {4478.91, 0.737904230129101},
        {4651.17, 0.8629785477669702},
        {4823.44, 0.9908319448927676},
        {4995.7, 1.11429453359173},
        {5167.97, 1.2274392311584073},
        {5340.23, 1.3273944577297394},
        {5512.5, 1.4157937799570817},
        {5684.77, 1.492794409578996},
        {5857.03, 1.5595525028269537},
        {6029.3, 1.625548755750484},
        {6201.56, 1.690440931643264},
        {6373.83, 1.7619760464116292},
        {6546.09, 1.8323144223712116},
        {6718.36, 1.9142559250210855},
        {6890.63, 2.009092812608728},
        {7062.89, 2.113489039836647},
        {7235.16, 2.233572222830532},
        {7407.42, 2.3659196974857584},
        {7579.69, 2.5234807724805743},
        {7751.95, 2.703958364108844},
        {7924.22, 2.910717118066605},
        {8096.48, 3.147748314101316},
        {8268.75, 3.427677865464503},
        {8613.28, 4.120975190973302},
        {8957.81, 5.093308710571955},
        {9302.34, 6.456542290346555},
        {9646.88, 8.413951416451951},
        {9991.41, 11.324003632355566},
        {10335.94, 15.739828644662197},
        {10680.47, 22.698648518838223},
        {11025.0, 33.962527259040854},
        {11369.53, 52.84452517751805},
        {11714.06, 85.90135215053957},
        {12058.59, 145.8814260275349},
        {12403.13, 260.0159563165272},
        {12747.66, 487.528490103386},
        {13092.19, 963.8290236239706},
        {13436.72, 2018.3663636815597},
        {13781.25, 4487.453899331323},
        {14125.78, 10592.537251772897},
        {14470.31, 26730.064086633145},
        {14814.84, 72276.98036021703},
        {15159.38, 209893.98836235245},
        {15503.91, 657657.8373554199},
        {15848.44, 2233572.2228305326},
        {16192.97, 6309573.44480193},
        {16537.5, 6309573.44480193},
        {16882.03, 6309573.44480193},
        {17226.56, 6309573.44480193},
        {17571.09, 6309573.44480193},
        {17915.63, 6309573.44480193},
        {18260.16, 6309573.44480193},
        {18604.69, 6309573.44480193},
        {18949.22, 6309573.44480193},
        {19293.75, 6309573.44480193},
        {19638.28, 6309573.44480193},
        {19982.81, 6309573.44480193}
    }};
};
